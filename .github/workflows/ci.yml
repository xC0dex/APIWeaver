name: Pipeline

on:
  push:
    branches:
      - main
      - workflow
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/**'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NODE_MODULES_PATH: 'src/APIWeaver.Swagger/node_modules'

jobs:
  node-setup:
    uses: xC0dex/APIWeaver/.github/workflows/node-assets.yml@workflow
  build:
    if: ${{ github.ref_type != 'tag' }}
    runs-on: ubuntu-latest
    needs: 
      - node-setup
    steps:
      - uses: actions/checkout@v4
      - name: Download Node.js modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: ${{ env.NODE_MODULES_PATH }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore

  publish:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    needs: 
      - node-setup
    strategy:
      matrix:
        project:
          - 'APIWeaver.Core'
          - 'APIWeaver.OpenApi'
          - 'APIWeaver.Schema'
          - 'APIWeaver.Swagger'
    steps:
      - uses: actions/checkout@v4
      - name: Download Node.js modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: ${{ env.NODE_MODULES_PATH }}
      - name: Get version
        env:
          TAG: ${{ github.ref_name }}
        run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Pack ${{ matrix.project }}
        working-directory: src/${{ matrix.project }}
        run: dotnet pack -c Release --output nupkgs /p:Version=$VERSION /p:PackageVersion=$VERSION
      - name: Publish ${{ matrix.project }}
        working-directory: src/${{ matrix.project }}
        run: |
          dotnet nuget push nupkgs/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push nupkgs/*.snupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate
  
  analyze:
    if: ${{ github.ref_type != 'tag' }}
    runs-on: ubuntu-latest
    needs:
      - build
      - node-setup
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Node.js modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: 'src/APIWeaver.Swagger/node_modules'
      - name: Analyze and test solution
        uses: highbyte/sonarscan-dotnet@v2.3.1
        with:
          sonarProjectKey: xC0dex_APIWeaver
          sonarProjectName: APIWeaver
          sonarOrganization: apiweaver
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          dotnetTestArguments: -c Release --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          dotnetBuildArguments: -c Release
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
