name: Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NODE_MODULES_PATH: 'src/APIWeaver.Swagger/node_modules'

jobs:
  node-setup:
    uses: xC0dex/APIWeaver/.github/workflows/node-assets.yml@main
  build:
    runs-on: ubuntu-latest
    needs: 
      - node-setup
    steps:
      - uses: actions/checkout@v4
      - name: Download Node.js modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: ${{ env.NODE_MODULES_PATH }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
  
  analyze:
    runs-on: ubuntu-latest
    needs:
      - build
      - node-setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 9.x
        
      - name: Install sonar scanner
        run: dotnet tool install -g dotnet-sonarscanner  
        
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Download Node.js modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          #path: 'src/APIWeaver.Swagger/node_modules'
          
      - name: Analyze and test solution
        run: |
          dotnet sonarscanner begin /k:"${{ env.PROJECT_KEY }}" /o:"${{ env.ORGANIZATION }}" /d:sonar.token="${{ env.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.dotnet.excludeTestProjects=true /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          dotnet build -c Release --no-restore --no-incremental
          dotnet test -c Release --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PROJECT_KEY: xC0dex_APIWeaver
          ORGANIZATION: apiweaver
